{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adars\\\\OneDrive\\\\Desktop\\\\HRC java\\\\HRC60327WK-front_end\\\\src\\\\components\\\\body\\\\bodyHeader\\\\editDialog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Grid from \"@mui/material/Grid\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  dialogPaper: {\n    backgroundColor: \"#2A3E4C !important\",\n    color: \"#FFFFFF !important\"\n  },\n  txtBox: {\n    backgroundColor: \"#FFFFFF !important\",\n    borderRadius: \"0.3rem !important\"\n  }\n}));\n\nconst EditDialog = props => {\n  _s();\n\n  const classes = useStyles();\n  console.log(props.currentRow);\n  console.log(props.select);\n  const [inv_curr, set_inv_curr] = useState(\"\");\n  const [cust_pay_terms, set_cust_pay_terms] = useState(\"\");\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleUpdate = e => {\n    if (props.select.length > 1) {\n      alert(\"Multiple Row Selected\");\n    } else {\n      e.preventDefault();\n      const url = `http://localhost:8081/HRC/updateServlet?sl_no=${props.select[0]}&invoice_currency=${inv_curr}&cust_payment_terms=${cust_pay_terms}`;\n\n      try {\n        axios.post(url).then(res => console.log(res.data));\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    setOpen(false);\n  };\n\n  const handleClose = e => {\n    e.preventDefault();\n    console.log(inv_curr, cust_pay_terms);\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleClickOpen,\n      disabled: !props.currentRow,\n      size: \"medium\",\n      style: {\n        color: \"white\",\n        marginTop: \"1%\",\n        width: \"150px\"\n      },\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      classes: {\n        paper: classes.dialogPaper\n      },\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"EDIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          autoComplete: \"off\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                name: \"inv_curr\",\n                variant: \"outlined\",\n                label: \"Invoice Currency\",\n                onChange: e => set_inv_curr(e.target.value),\n                className: classes.txtBox\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                name: \"cust_pay_terms\",\n                variant: \"outlined\",\n                label: \"Customer Payment Terms\",\n                onChange: e => set_cust_pay_terms(e.target.value),\n                className: classes.txtBox\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleUpdate,\n          variant: \"outlined\",\n          style: {\n            color: \"white\",\n            borderColor: \"white\"\n          },\n          children: \"EDIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          variant: \"outlined\",\n          style: {\n            color: \"white\",\n            borderColor: \"white\"\n          },\n          children: \"CANCEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EditDialog, \"4XFg8mhtf1YSDkcZQvGxtWXpT+I=\", false, function () {\n  return [useStyles];\n});\n\n_c = EditDialog;\nexport default EditDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDialog\");","map":{"version":3,"sources":["C:/Users/adars/OneDrive/Desktop/HRC java/HRC60327WK-front_end/src/components/body/bodyHeader/editDialog.js"],"names":["React","useState","Button","TextField","Grid","Dialog","DialogActions","DialogContent","DialogTitle","makeStyles","axios","useStyles","theme","dialogPaper","backgroundColor","color","txtBox","borderRadius","EditDialog","props","classes","console","log","currentRow","select","inv_curr","set_inv_curr","cust_pay_terms","set_cust_pay_terms","open","setOpen","handleClickOpen","handleUpdate","e","length","alert","preventDefault","url","post","then","res","data","err","handleClose","marginTop","width","paper","target","value","borderColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from 'axios'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialogPaper: {\r\n    backgroundColor: \"#2A3E4C !important\",\r\n    color: \"#FFFFFF !important\",\r\n  },\r\n  txtBox: {\r\n    backgroundColor: \"#FFFFFF !important\",\r\n    borderRadius: \"0.3rem !important\",\r\n  },\r\n}));\r\n\r\nconst EditDialog = (props) => {\r\n  const classes = useStyles();\r\n\r\n  console.log(props.currentRow);\r\n  console.log(props.select);\r\n\r\n  const [inv_curr, set_inv_curr] = useState(\"\");\r\n  const [cust_pay_terms, set_cust_pay_terms] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleUpdate = (e) => {\r\n    if (props.select.length > 1) {\r\n      alert(\"Multiple Row Selected\");\r\n    } else {\r\n      e.preventDefault();\r\n\r\n      const url = `http://localhost:8081/HRC/updateServlet?sl_no=${props.select[0]}&invoice_currency=${inv_curr}&cust_payment_terms=${cust_pay_terms}`;\r\n\r\n      try {\r\n        axios.post(url).then((res) => console.log(res.data));\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClose = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(inv_curr, cust_pay_terms);\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"outlined\"\r\n        onClick={handleClickOpen}\r\n        disabled={!props.currentRow}\r\n        size=\"medium\"\r\n        style={{\r\n          color: \"white\",\r\n          marginTop: \"1%\",\r\n          width: \"150px\",\r\n        }}\r\n      >\r\n        Edit\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        classes={{ paper: classes.dialogPaper }}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle>EDIT</DialogTitle>\r\n        <DialogContent>\r\n          <form noValidate autoComplete=\"off\">\r\n            <Grid container spacing={2}>\r\n              <Grid item md={6}>\r\n                <TextField\r\n                  name=\"inv_curr\"\r\n                  variant=\"outlined\"\r\n                  label=\"Invoice Currency\"\r\n                  onChange={(e) => set_inv_curr(e.target.value)}\r\n                  className={classes.txtBox}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <TextField\r\n                  name=\"cust_pay_terms\"\r\n                  variant=\"outlined\"\r\n                  label=\"Customer Payment Terms\"\r\n                  onChange={(e) => set_cust_pay_terms(e.target.value)}\r\n                  className={classes.txtBox}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={handleUpdate}\r\n            variant=\"outlined\"\r\n            style={{ color: \"white\", borderColor: \"white\" }}\r\n          >\r\n            EDIT\r\n          </Button>\r\n          <Button\r\n            onClick={handleClose}\r\n            variant=\"outlined\"\r\n            style={{ color: \"white\", borderColor: \"white\" }}\r\n          >\r\n            CANCEL\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditDialog;\r\n"]},"metadata":{},"sourceType":"module"}