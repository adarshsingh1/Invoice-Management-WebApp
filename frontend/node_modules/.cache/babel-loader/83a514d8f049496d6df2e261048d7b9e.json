{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adars\\\\OneDrive\\\\Desktop\\\\HRC java\\\\HRC60327WK-front_end\\\\src\\\\components\\\\body\\\\bodyHeader\\\\analyticsView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Dialog } from \"@material-ui/core\";\nimport { Button, DialogActions, DialogContent, DialogTitle, Grid } from \"@mui/material\";\nimport TextField from \"@mui/material/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  dialogPaper: {\n    maxWidth: \"60rem !important\",\n    backgroundColor: \"#2A3E4C !important\",\n    color: \"#FFFFFF !important\"\n  },\n  txtBox: {\n    backgroundColor: \"#FFFFFF !important\",\n    borderRadius: \"0.3rem !important\",\n    width: \"100% !important\"\n  }\n}));\nexport const AnalyticsView = props => {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [start_cl_date, set_start_cl_date] = useState(new Date());\n  const [end_cl_date, set_end_cl_date] = useState(new Date());\n  const [start_due_date, set_start_due_date] = useState(new Date());\n  const [end_due_date, set_end_due_date] = useState(new Date());\n  const [start_base_date, set_start_base_date] = useState(new Date());\n  const [end_base_date, set_end_base_date] = useState(new Date());\n  const [curr, setCurr] = useState(new Date());\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = () => {\n    console.log(\"Submit\"); //console.log(cl_date);\n\n    handleClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      style: {\n        color: \"white\",\n        paddingLeft: \"1.2rem\",\n        paddingRight: \"1.2rem\"\n      },\n      size: \"medium\",\n      onClick: handleClickOpen,\n      children: \"Analytics View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      classes: {\n        paper: classes.dialogPaper\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Analytics View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 5,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Clear Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                name: \"clear_date\",\n                variant: \"outlined\",\n                size: \"small\",\n                type: \"date\",\n                className: classes.txtBox,\n                onChange: e => set_start_cl_date(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                name: \"clear_date\",\n                variant: \"outlined\",\n                size: \"small\",\n                type: \"date\",\n                className: classes.txtBox,\n                onChange: e => set_end_cl_date(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Due Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                name: \"clear_date\",\n                variant: \"outlined\",\n                size: \"small\",\n                type: \"date\",\n                className: classes.txtBox,\n                onChange: e => set_start_due_date(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                name: \"clear_date\",\n                variant: \"outlined\",\n                size: \"small\",\n                type: \"date\",\n                className: classes.txtBox,\n                onChange: e => set_end_due_date(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Baseline Create Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                name: \"clear_date\",\n                variant: \"outlined\",\n                size: \"small\",\n                type: \"date\",\n                className: classes.txtBox,\n                onChange: e => set_start_base_date(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                name: \"clear_date\",\n                variant: \"outlined\",\n                size: \"small\",\n                type: \"date\",\n                className: classes.txtBox,\n                onChange: e => set_end_base_date(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Invoice Currency\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                name: \"inv_curr\",\n                variant: \"outlined\",\n                label: \"Invoice Currency\",\n                size: \"small\",\n                onChange: e => setCurr(e.target.value),\n                className: classes.txtBox\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          variant: \"outlined\",\n          style: {\n            color: \"white\",\n            borderColor: \"white\"\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          variant: \"outlined\",\n          style: {\n            color: \"white\",\n            borderColor: \"white\"\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AnalyticsView, \"dxWRQgx0MhOxaXDUnb7M5C6T7mc=\", false, function () {\n  return [useStyles];\n});\n\n_c = AnalyticsView;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnalyticsView\");","map":{"version":3,"sources":["C:/Users/adars/OneDrive/Desktop/HRC java/HRC60327WK-front_end/src/components/body/bodyHeader/analyticsView.js"],"names":["React","useState","Dialog","Button","DialogActions","DialogContent","DialogTitle","Grid","TextField","makeStyles","useStyles","theme","dialogPaper","maxWidth","backgroundColor","color","txtBox","borderRadius","width","AnalyticsView","props","classes","open","setOpen","start_cl_date","set_start_cl_date","Date","end_cl_date","set_end_cl_date","start_due_date","set_start_due_date","end_due_date","set_end_due_date","start_base_date","set_start_base_date","end_base_date","set_end_base_date","curr","setCurr","handleClickOpen","handleClose","handleSubmit","console","log","paddingLeft","paddingRight","paper","e","target","value","borderColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Dialog } from \"@material-ui/core\";\r\nimport {\r\n  Button,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n} from \"@mui/material\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialogPaper: {\r\n    maxWidth: \"60rem !important\",\r\n    backgroundColor: \"#2A3E4C !important\",\r\n    color: \"#FFFFFF !important\",\r\n  },\r\n  txtBox: {\r\n    backgroundColor: \"#FFFFFF !important\",\r\n    borderRadius: \"0.3rem !important\",\r\n    width: \"100% !important\",\r\n  },\r\n}));\r\n\r\nexport const AnalyticsView = (props) => {\r\n  const classes = useStyles();\r\n  \r\n  const [open, setOpen] = useState(false);\r\n  const [start_cl_date, set_start_cl_date] = useState(new Date());\r\n  const [end_cl_date, set_end_cl_date] = useState(new Date());\r\n  const [start_due_date, set_start_due_date] = useState(new Date());\r\n  const [end_due_date, set_end_due_date] = useState(new Date());\r\n  const [start_base_date, set_start_base_date] = useState(new Date());\r\n  const [end_base_date, set_end_base_date] = useState(new Date());\r\n  const [curr, setCurr] = useState(new Date());\r\n\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    console.log(\"Submit\");\r\n    //console.log(cl_date);\r\n    handleClose();\r\n  };\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"outlined\"\r\n        style={{ color: \"white\", paddingLeft: \"1.2rem\", paddingRight: \"1.2rem\" }}\r\n        size=\"medium\"\r\n        onClick={handleClickOpen}\r\n      >\r\n        Analytics View\r\n      </Button>\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        classes={{ paper: classes.dialogPaper }}\r\n      >\r\n        <DialogTitle>Analytics View</DialogTitle>\r\n        <DialogContent>\r\n          <form>\r\n            <Grid container spacing={5}>\r\n              <Grid item>\r\n                <p>Clear Date</p>\r\n                <TextField\r\n                  name=\"clear_date\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  type=\"date\"\r\n                  className={classes.txtBox}\r\n                  onChange={(e) => set_start_cl_date(e.target.value)}\r\n                />\r\n                <TextField\r\n                  name=\"clear_date\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  type=\"date\"\r\n                  className={classes.txtBox}\r\n                  onChange={(e) => set_end_cl_date(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <p>Due Date</p>\r\n                <TextField\r\n                  name=\"clear_date\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  type=\"date\"\r\n                  className={classes.txtBox}\r\n                  onChange={(e) => set_start_due_date(e.target.value)}\r\n                />\r\n                <TextField\r\n                  name=\"clear_date\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  type=\"date\"\r\n                  className={classes.txtBox}\r\n                  onChange={(e) => set_end_due_date(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <p>Baseline Create Date</p>\r\n                <TextField\r\n                  name=\"clear_date\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  type=\"date\"\r\n                  className={classes.txtBox}\r\n                  onChange={(e) => set_start_base_date(e.target.value)}\r\n                />\r\n                <TextField\r\n                  name=\"clear_date\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  type=\"date\"\r\n                  className={classes.txtBox}\r\n                  onChange={(e) => set_end_base_date(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <p>Invoice Currency</p>\r\n                <TextField\r\n                  name=\"inv_curr\"\r\n                  variant=\"outlined\"\r\n                  label=\"Invoice Currency\"\r\n                  size=\"small\"\r\n                  onChange={(e) => setCurr(e.target.value)}\r\n                  className={classes.txtBox}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={handleClose}\r\n            variant=\"outlined\"\r\n            style={{ color: \"white\", borderColor: \"white\" }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={handleSubmit}\r\n            variant=\"outlined\"\r\n            style={{ color: \"white\", borderColor: \"white\" }}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}